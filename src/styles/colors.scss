
$MainBlue: #50a6c2;

$themes: (
    light: (
    // App pallet
    appBackground: rgba(242,242,240,1), //white,
    sectionBackground:#5c7ef3,// #4a64bd, //#50a6c2,
    sidebarBackground: #465967,
    textColor: black,
    secondaryTextColor: white,
    paperBoxShadow: (0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12)),
    highlightedPaperBoxShadow: (0px 1px 15px 0px rgba(0, 0, 0, 0.2), 7px 8px 1px 0px rgba(0, 0, 0, 0.14), 5px 5px 1px -1px rgba(0, 0, 0, 0.12)),

    // borders
    borderColor: lightgray,

    // colors
    successBackground:#00b508,
    successText:#43a047,
    redWarn: crimson,
    redError: #d32f2f,
    whiteText: white,
    orangeText: #c76114,
    whiteBackground: white,
    warningBackground: #ffa000,
    errBackground: #e66161,
    infoBackground: #1976d2,
    blackText: black,
    lightGrayBackground: lightgray,
    disabled: gray,

    // List
    listHeaderBackground: lightslategray,
    listItemHoverBackground: aliceblue,
    ),

    dark: (
    // App pallet
    appBackground: #383838,
    sectionBackground: #b9b9b9,
    sidebarBackground: #29566b,
    textColor: wheat,
    secondaryTextColor: black,
    paperBoxShadow:( 0px 1px 3px 0px rgba(240, 240, 240, 0.12), 0px 1px 1px 0px rgba(240, 240, 240, 0.14), 0px 2px 1px -1px rgba(240, 240, 240, 0.12)),
    highlightedPaperBoxShadow: (0px 1px 15px 0px rgba(240, 240, 240, 0.2), 7px 8px 1px 0px rgba(240, 240, 240, 0.14), 5px 5px 1px -1px rgba(240, 240, 240, 0.12)),

    // borders
    borderColor: lightgray,

    // colors
    successBackground:#00b508,
    successText:#43a047,
    redWarn: crimson,
    whiteText: white,
    orangeText: #c76114,
    whiteBackground: white,
    warningBackground: #ffa000,
    errBackground: #e66161,
    infoBackground: #1976d2,
    blackText: black,
    lightGrayBackground: lightgray,
    disabled: gray,

    // List
    listHeaderBackground: white,
    listItemHoverBackground: aliceblue,
    ),
);

/*
 * Implementation of themes
 */
@mixin themify($themes) {
  @each $theme, $map in $themes {
    :global(.theme_#{$theme}) & {
      $theme-map: () !global;

      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}') !global;
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}
  